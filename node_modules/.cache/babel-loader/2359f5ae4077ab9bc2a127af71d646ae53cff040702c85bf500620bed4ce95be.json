{"ast":null,"code":"var _jsxFileName = \"/Users/nik1t7n/Desktop/again/my-tailwind-app/src/pages/InfoPage/InfoPage.tsx\";\nimport React from \"react\";\nimport AreaCard from \"../../components/info/AreaCard\";\nimport { areas } from \"../../data/Areas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"bg-blue-200\", \"bg-green-200\", \"bg-yellow-200\", \"bg-purple-200\", \"bg-pink-200\", \"bg-indigo-200\"];\nconst InfoPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dark:bg-gray-800\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8 h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[80vh] overflow-y-auto rounded-lg border border-gray-300 shadow-md dark:bg-gray-850\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4\",\n          children: areas.map((area, index) => {\n            // Используем остаток от деления на длину массива цветов для выбора по порядку\n            const colorIndex = index % colors.length;\n            return /*#__PURE__*/_jsxDEV(AreaCard, {\n              category: area.category,\n              name: area.name,\n              fgp: area.fgp,\n              relief: area.relief,\n              climate: area.climate,\n              internalWaters: area.internalWaters,\n              soils: area.soils,\n              landscape: area.landscape,\n              vegetation: area.vegetation,\n              fauna: area.fauna,\n              bg_color: colors[colorIndex] // Передаем цвет по порядку\n              ,\n              dark_bg_color: darkColors[colorIndex]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = InfoPage;\nexport default InfoPage;\nvar _c;\n$RefreshReg$(_c, \"InfoPage\");","map":{"version":3,"names":["React","AreaCard","areas","jsxDEV","_jsxDEV","colors","InfoPage","className","children","map","area","index","colorIndex","length","category","name","fgp","relief","climate","internalWaters","soils","landscape","vegetation","fauna","bg_color","dark_bg_color","darkColors","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nik1t7n/Desktop/again/my-tailwind-app/src/pages/InfoPage/InfoPage.tsx"],"sourcesContent":["import React from \"react\";\nimport AreaCard from \"../../components/info/AreaCard\";\nimport { areas } from \"../../data/Areas\";\n\nconst colors = [\n  \"bg-blue-200\",\n  \"bg-green-200\",\n  \"bg-yellow-200\",\n  \"bg-purple-200\",\n  \"bg-pink-200\",\n  \"bg-indigo-200\",\n];\n\n\nconst InfoPage = () => {\n  return (\n    <div className=\"dark:bg-gray-800\">\n      <div className=\"container mx-auto px-4 py-8 h-screen\">\n        <div className=\"h-[80vh] overflow-y-auto rounded-lg border border-gray-300 shadow-md dark:bg-gray-850\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4\">\n            {areas.map((area, index) => {\n              // Используем остаток от деления на длину массива цветов для выбора по порядку\n              const colorIndex = index % colors.length;\n              return (\n                <AreaCard\n                  key={index}\n                  category={area.category}\n                  name={area.name}\n                  fgp={area.fgp}\n                  relief={area.relief}\n                  climate={area.climate}\n                  internalWaters={area.internalWaters}\n                  soils={area.soils}\n                  landscape={area.landscape}\n                  vegetation={area.vegetation}\n                  fauna={area.fauna}\n                  bg_color={colors[colorIndex]} // Передаем цвет по порядку\n                  dark_bg_color={darkColors[colorIndex]}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,SAASC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAG,CACb,aAAa,EACb,cAAc,EACd,eAAe,EACf,eAAe,EACf,aAAa,EACb,eAAe,CAChB;AAGD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACEF,OAAA;IAAKG,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BJ,OAAA;MAAKG,SAAS,EAAC,sCAAsC;MAAAC,QAAA,eACnDJ,OAAA;QAAKG,SAAS,EAAC,uFAAuF;QAAAC,QAAA,eACpGJ,OAAA;UAAKG,SAAS,EAAC,0DAA0D;UAAAC,QAAA,EACtEN,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;YAC1B;YACA,MAAMC,UAAU,GAAGD,KAAK,GAAGN,MAAM,CAACQ,MAAM;YACxC,oBACET,OAAA,CAACH,QAAQ;cAEPa,QAAQ,EAAEJ,IAAI,CAACI,QAAS;cACxBC,IAAI,EAAEL,IAAI,CAACK,IAAK;cAChBC,GAAG,EAAEN,IAAI,CAACM,GAAI;cACdC,MAAM,EAAEP,IAAI,CAACO,MAAO;cACpBC,OAAO,EAAER,IAAI,CAACQ,OAAQ;cACtBC,cAAc,EAAET,IAAI,CAACS,cAAe;cACpCC,KAAK,EAAEV,IAAI,CAACU,KAAM;cAClBC,SAAS,EAAEX,IAAI,CAACW,SAAU;cAC1BC,UAAU,EAAEZ,IAAI,CAACY,UAAW;cAC5BC,KAAK,EAAEb,IAAI,CAACa,KAAM;cAClBC,QAAQ,EAAEnB,MAAM,CAACO,UAAU,CAAE,CAAC;cAAA;cAC9Ba,aAAa,EAAEC,UAAU,CAACd,UAAU;YAAE,GAZjCD,KAAK;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaX,CAAC;UAEN,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAhCIzB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}