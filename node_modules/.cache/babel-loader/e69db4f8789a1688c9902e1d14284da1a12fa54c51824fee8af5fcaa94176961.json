{"ast":null,"code":"var _jsxFileName = \"/Users/nik1t7n/Desktop/again/my-tailwind-app/src/components/QuizCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizCard = ({\n  category,\n  questionNumber,\n  questionsAmount,\n  questionText,\n  options\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answerSelected, setAnswerSelected] = useState(false);\n  useEffect(() => {\n    shuffleOptions();\n  }, [questionNumber]);\n  const shuffleOptions = () => {\n    const shuffledOptions = [...options].sort(() => Math.random() - 0.5);\n    setSelectedOption(null);\n    setShuffledOptions(shuffledOptions);\n  };\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const handleOptionClick = (index, isCorrect) => {\n    setSelectedOption(index);\n    if (isCorrect) {\n      // Действия при выборе правильного ответа\n    } else {\n      // Действия при выборе неправильного ответа\n    }\n  };\n  const handleAnswerSelect = () => {\n    setAnswerSelected(true);\n  };\n\n  // Константы для классов кнопок\n  const correctClass = \"bg-green-600  hover:bg-green-700  text-white\";\n  const incorrectClass = \"bg-red-600  hover:bg-red-700  text-white\";\n  const defaultClass = \"bg-blue-600 dark:bg-purple-500 hover:bg-blue-700 dark:hover:bg-purple-600 text-white\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto bg-white dark:bg-gray-800 shadow-md rounded-lg overflow-hidden mb-4 dark:gradient-to-br dark:from-purple-600 dark:to-blue-500 dark:border-2\",\n    style: {\n      height: \"400px\",\n      overflowY: \"scroll\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-200 dark:bg-gray-900 text-gray-700 dark:text-gray-300 text-lg font-semibold px-6 py-4\",\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 dark:text-gray-400 mb-2\",\n        children: [\"Question \", questionNumber, \" out of \", questionsAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-800 dark:text-gray-200 mb-4\",\n        children: questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-4\",\n        children: shuffledOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(index, option.isCorrect),\n          className: `py-2 px-4 rounded focus:outline-none focus:shadow-outline block w-full text-left ${selectedOption === index ? option.isCorrect ? correctClass : incorrectClass : defaultClass}`,\n          disabled: answerSelected,\n          children: option.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizCard, \"IgBcWKGDGsLV1h2oGgQpOspn4+Q=\");\n_c = QuizCard;\nexport default QuizCard;\nvar _c;\n$RefreshReg$(_c, \"QuizCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuizCard","category","questionNumber","questionsAmount","questionText","options","_s","selectedOption","setSelectedOption","answerSelected","setAnswerSelected","shuffleOptions","shuffledOptions","sort","Math","random","setShuffledOptions","handleOptionClick","index","isCorrect","handleAnswerSelect","correctClass","incorrectClass","defaultClass","className","style","height","overflowY","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","disabled","text","_c","$RefreshReg$"],"sources":["/Users/nik1t7n/Desktop/again/my-tailwind-app/src/components/QuizCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Tooltip from \"./Tooltip\";\n\ninterface Props {\n  category: string;\n  questionNumber: number;\n  questionsAmount: number;\n  questionText: string;\n  options: { text: string; isCorrect: boolean }[];\n}\n\nconst QuizCard: React.FC<Props> = ({\n  category,\n  questionNumber,\n  questionsAmount,\n  questionText,\n  options,\n}: Props) => {\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\n  const [answerSelected, setAnswerSelected] = useState(false);\n\n  useEffect(() => {\n    shuffleOptions();\n  }, [questionNumber]);\n\n  const shuffleOptions = () => {\n    const shuffledOptions = [...options].sort(() => Math.random() - 0.5);\n    setSelectedOption(null);\n    setShuffledOptions(shuffledOptions);\n  };\n\n  const [shuffledOptions, setShuffledOptions] = useState(\n    [] as { text: string; isCorrect: boolean }[]\n  );\n\n  const handleOptionClick = (index: number, isCorrect: boolean) => {\n    setSelectedOption(index);\n    if (isCorrect) {\n      // Действия при выборе правильного ответа\n    } else {\n      // Действия при выборе неправильного ответа\n    }\n  };\n\n  const handleAnswerSelect = () => {\n    setAnswerSelected(true);\n  };\n\n  // Константы для классов кнопок\n  const correctClass = \"bg-green-600  hover:bg-green-700  text-white\";\n  const incorrectClass = \"bg-red-600  hover:bg-red-700  text-white\";\n  const defaultClass = \"bg-blue-600 dark:bg-purple-500 hover:bg-blue-700 dark:hover:bg-purple-600 text-white\";\n\n  return (\n    <div\n      className=\"max-w-xl mx-auto bg-white dark:bg-gray-800 shadow-md rounded-lg overflow-hidden mb-4 dark:gradient-to-br dark:from-purple-600 dark:to-blue-500 dark:border-2\"\n      style={{ height: \"400px\", overflowY: \"scroll\" }}\n    >\n      <div className=\"bg-gray-200 dark:bg-gray-900 text-gray-700 dark:text-gray-300 text-lg font-semibold px-6 py-4\">\n        {category}\n      </div>\n      <div className=\"p-6\">\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n          Question {questionNumber} out of {questionsAmount}\n        </p>\n        <p className=\"text-xl text-gray-800 dark:text-gray-200 mb-4\">{questionText}</p>\n        <div className=\"grid grid-cols-1 gap-4\">\n          {shuffledOptions.map((option, index) => (\n            <button\n              key={index}\n              onClick={() => handleOptionClick(index, option.isCorrect)}\n              className={`py-2 px-4 rounded focus:outline-none focus:shadow-outline block w-full text-left ${\n                selectedOption === index\n                  ? option.isCorrect\n                    ? correctClass\n                    : incorrectClass\n                  : defaultClass\n              }`}\n              disabled={answerSelected}\n            >\n              {option.text}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}