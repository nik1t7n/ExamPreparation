{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizCard=_ref=>{let{category,questionNumber,questionsAmount,questionText,options}=_ref;const[selectedOption,setSelectedOption]=useState(null);const[answerSelected,setAnswerSelected]=useState(false);useEffect(()=>{shuffleOptions();},[questionNumber]);const shuffleOptions=()=>{const shuffledOptions=[...options].sort(()=>Math.random()-0.5);setSelectedOption(null);setShuffledOptions(shuffledOptions);};const[shuffledOptions,setShuffledOptions]=useState([]);const handleOptionClick=(index,isCorrect)=>{setSelectedOption(index);if(isCorrect){// Действия при выборе правильного ответа\n}else{// Действия при выборе неправильного ответа\n}};const handleAnswerSelect=()=>{setAnswerSelected(true);};// Константы для классов кнопок\nconst correctClass=\"bg-green-600  hover:bg-green-700  text-white\";const incorrectClass=\"bg-red-600  hover:bg-red-700  text-white\";const defaultClass=\"bg-blue-600 dark:bg-purple-500 hover:bg-blue-700 dark:hover:bg-purple-600 text-white\";return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-xl mx-auto bg-white dark:bg-gray-900 shadow-md rounded-lg overflow-hidden mb-4 dark:border-purple-200 dark:border-2\",style:{height:\"400px\",overflowY:\"scroll\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-200 dark:bg-gray-950 text-gray-700 dark:text-gray-300 text-lg font-semibold px-6 py-4\",children:category}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mb-2\",children:[\"Question \",questionNumber,\" out of \",questionsAmount]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-gray-800 dark:text-gray-200 mb-4\",children:questionText}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 gap-4\",children:shuffledOptions.map((option,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleOptionClick(index,option.isCorrect),className:\"py-2 px-4 rounded focus:outline-none focus:shadow-outline block w-full text-left \".concat(selectedOption===index?option.isCorrect?correctClass:incorrectClass:defaultClass),disabled:answerSelected,children:option.text},index))})]})]});};export default QuizCard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","QuizCard","_ref","category","questionNumber","questionsAmount","questionText","options","selectedOption","setSelectedOption","answerSelected","setAnswerSelected","shuffleOptions","shuffledOptions","sort","Math","random","setShuffledOptions","handleOptionClick","index","isCorrect","handleAnswerSelect","correctClass","incorrectClass","defaultClass","className","style","height","overflowY","children","map","option","onClick","concat","disabled","text"],"sources":["/Users/nik1t7n/Desktop/again/my-tailwind-app/src/components/QuizCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Tooltip from \"./Tooltip\";\n\ninterface Props {\n  category: string;\n  questionNumber: number;\n  questionsAmount: number;\n  questionText: string;\n  options: { text: string; isCorrect: boolean }[];\n}\n\nconst QuizCard: React.FC<Props> = ({\n  category,\n  questionNumber,\n  questionsAmount,\n  questionText,\n  options,\n}: Props) => {\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\n  const [answerSelected, setAnswerSelected] = useState(false);\n\n  useEffect(() => {\n    shuffleOptions();\n  }, [questionNumber]);\n\n  const shuffleOptions = () => {\n    const shuffledOptions = [...options].sort(() => Math.random() - 0.5);\n    setSelectedOption(null);\n    setShuffledOptions(shuffledOptions);\n  };\n\n  const [shuffledOptions, setShuffledOptions] = useState(\n    [] as { text: string; isCorrect: boolean }[]\n  );\n\n  const handleOptionClick = (index: number, isCorrect: boolean) => {\n    setSelectedOption(index);\n    if (isCorrect) {\n      // Действия при выборе правильного ответа\n    } else {\n      // Действия при выборе неправильного ответа\n    }\n  };\n\n  const handleAnswerSelect = () => {\n    setAnswerSelected(true);\n  };\n\n  // Константы для классов кнопок\n  const correctClass = \"bg-green-600  hover:bg-green-700  text-white\";\n  const incorrectClass = \"bg-red-600  hover:bg-red-700  text-white\";\n  const defaultClass = \"bg-blue-600 dark:bg-purple-500 hover:bg-blue-700 dark:hover:bg-purple-600 text-white\";\n\n  return (\n    <div\n      className=\"max-w-xl mx-auto bg-white dark:bg-gray-900 shadow-md rounded-lg overflow-hidden mb-4 dark:border-purple-200 dark:border-2\"\n      style={{ height: \"400px\", overflowY: \"scroll\" }}\n    >\n      <div className=\"bg-gray-200 dark:bg-gray-950 text-gray-700 dark:text-gray-300 text-lg font-semibold px-6 py-4\">\n        {category}\n      </div>\n      <div className=\"p-6\">\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n          Question {questionNumber} out of {questionsAmount}\n        </p>\n        <p className=\"text-xl text-gray-800 dark:text-gray-200 mb-4\">{questionText}</p>\n        <div className=\"grid grid-cols-1 gap-4\">\n          {shuffledOptions.map((option, index) => (\n            <button\n              key={index}\n              onClick={() => handleOptionClick(index, option.isCorrect)}\n              className={`py-2 px-4 rounded focus:outline-none focus:shadow-outline block w-full text-left ${\n                selectedOption === index\n                  ? option.isCorrect\n                    ? correctClass\n                    : incorrectClass\n                  : defaultClass\n              }`}\n              disabled={answerSelected}\n            >\n              {option.text}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizCard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAWnD,KAAM,CAAAC,QAAyB,CAAGC,IAAA,EAMrB,IANsB,CACjCC,QAAQ,CACRC,cAAc,CACdC,eAAe,CACfC,YAAY,CACZC,OACK,CAAC,CAAAL,IAAA,CACN,KAAM,CAACM,cAAc,CAAEC,iBAAiB,CAAC,CAAGd,QAAQ,CAAgB,IAAI,CAAC,CACzE,KAAM,CAACe,cAAc,CAAEC,iBAAiB,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAE3DC,SAAS,CAAC,IAAM,CACdgB,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACR,cAAc,CAAC,CAAC,CAEpB,KAAM,CAAAQ,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,eAAe,CAAG,CAAC,GAAGN,OAAO,CAAC,CAACO,IAAI,CAAC,IAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAC,CACpEP,iBAAiB,CAAC,IAAI,CAAC,CACvBQ,kBAAkB,CAACJ,eAAe,CAAC,CACrC,CAAC,CAED,KAAM,CAACA,eAAe,CAAEI,kBAAkB,CAAC,CAAGtB,QAAQ,CACpD,EACF,CAAC,CAED,KAAM,CAAAuB,iBAAiB,CAAGA,CAACC,KAAa,CAAEC,SAAkB,GAAK,CAC/DX,iBAAiB,CAACU,KAAK,CAAC,CACxB,GAAIC,SAAS,CAAE,CACb;AAAA,CACD,IAAM,CACL;AAAA,CAEJ,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/BV,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,CAED;AACA,KAAM,CAAAW,YAAY,CAAG,8CAA8C,CACnE,KAAM,CAAAC,cAAc,CAAG,0CAA0C,CACjE,KAAM,CAAAC,YAAY,CAAG,sFAAsF,CAE3G,mBACExB,KAAA,QACEyB,SAAS,CAAC,2HAA2H,CACrIC,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAO,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAC,QAAA,eAEhD/B,IAAA,QAAK2B,SAAS,CAAC,+FAA+F,CAAAI,QAAA,CAC3G1B,QAAQ,CACN,CAAC,cACNH,KAAA,QAAKyB,SAAS,CAAC,KAAK,CAAAI,QAAA,eAClB7B,KAAA,MAAGyB,SAAS,CAAC,+CAA+C,CAAAI,QAAA,EAAC,WAClD,CAACzB,cAAc,CAAC,UAAQ,CAACC,eAAe,EAChD,CAAC,cACJP,IAAA,MAAG2B,SAAS,CAAC,+CAA+C,CAAAI,QAAA,CAAEvB,YAAY,CAAI,CAAC,cAC/ER,IAAA,QAAK2B,SAAS,CAAC,wBAAwB,CAAAI,QAAA,CACpChB,eAAe,CAACiB,GAAG,CAAC,CAACC,MAAM,CAAEZ,KAAK,gBACjCrB,IAAA,WAEEkC,OAAO,CAAEA,CAAA,GAAMd,iBAAiB,CAACC,KAAK,CAAEY,MAAM,CAACX,SAAS,CAAE,CAC1DK,SAAS,qFAAAQ,MAAA,CACPzB,cAAc,GAAKW,KAAK,CACpBY,MAAM,CAACX,SAAS,CACdE,YAAY,CACZC,cAAc,CAChBC,YAAY,CACf,CACHU,QAAQ,CAAExB,cAAe,CAAAmB,QAAA,CAExBE,MAAM,CAACI,IAAI,EAXPhB,KAYC,CACT,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}