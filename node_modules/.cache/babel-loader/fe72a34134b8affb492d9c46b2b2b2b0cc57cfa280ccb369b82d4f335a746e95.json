{"ast":null,"code":"var _jsxFileName = \"/Users/nik1t7n/Desktop/again/my-tailwind-app/src/components/QuizCard.tsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizCard = ({\n  category,\n  questionNumber,\n  questionsAmount,\n  questionText,\n  options\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answerSelected, setAnswerSelected] = useState(false);\n  useEffect(() => {\n    shuffleOptions();\n  }, [questionNumber]);\n  const shuffleOptions = () => {\n    const shuffledOptions = [...options].sort(() => Math.random() - 0.5);\n    setSelectedOption(null);\n    setShuffledOptions(shuffledOptions);\n  };\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const handleOptionClick = (index, isCorrect) => {\n    setSelectedOption(index);\n    if (isCorrect) {\n      // Действия при выборе правильного ответа\n    } else {\n      // Действия при выборе неправильного ответа\n    }\n  };\n  const handleAnswerSelect = () => {\n    setAnswerSelected(true);\n  };\n\n  // Константы для классов кнопок\n  const correctClass = \"bg-green-600 dark:bg-purple-600 hover:bg-green-700 dark:hover:bg-purple-700 text-white\";\n  const incorrectClass = \"bg-red-600 dark:bg-purple-700 hover:bg-red-700 dark:hover:bg-purple-800 text-white\";\n  const defaultClass = \"bg-blue-600 dark:bg-purple-500 hover:bg-blue-700 dark:hover:bg-purple-600 text-white\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto bg-white dark:bg-gray-800 shadow-md rounded-lg overflow-hidden mb-4 relative\",\n    style: {\n      height: \"400px\",\n      overflowY: \"scroll\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-200 dark:bg-gray-900 text-gray-700 dark:text-gray-300 text-lg font-semibold px-6 py-4\",\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 dark:text-gray-400 mb-2\",\n        children: [\"Question \", questionNumber, \" out of \", questionsAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-800 dark:text-gray-200 mb-4\",\n        children: questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-4\",\n        children: shuffledOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(index, option.isCorrect),\n          className: `py-2 px-4 rounded focus:outline-none focus:shadow-outline block w-full text-left ${selectedOption === index ? option.isCorrect ? correctClass : incorrectClass : defaultClass}`,\n          disabled: answerSelected,\n          children: option.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-gradient-to-br from-purple-600 to-blue-500 opacity-50 pointer-events-none rounded-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizCard, \"IgBcWKGDGsLV1h2oGgQpOspn4+Q=\");\n_c = QuizCard;\nexport default QuizCard;\nvar _c;\n$RefreshReg$(_c, \"QuizCard\");","map":{"version":3,"names":["QuizCard","category","questionNumber","questionsAmount","questionText","options","_s","selectedOption","setSelectedOption","useState","answerSelected","setAnswerSelected","useEffect","shuffleOptions","shuffledOptions","sort","Math","random","setShuffledOptions","handleOptionClick","index","isCorrect","handleAnswerSelect","correctClass","incorrectClass","defaultClass","_jsxDEV","className","style","height","overflowY","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","disabled","text","_c","$RefreshReg$"],"sources":["/Users/nik1t7n/Desktop/again/my-tailwind-app/src/components/QuizCard.tsx"],"sourcesContent":["const QuizCard: React.FC<Props> = ({\n  category,\n  questionNumber,\n  questionsAmount,\n  questionText,\n  options,\n}: Props) => {\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\n  const [answerSelected, setAnswerSelected] = useState(false);\n\n  useEffect(() => {\n    shuffleOptions();\n  }, [questionNumber]);\n\n  const shuffleOptions = () => {\n    const shuffledOptions = [...options].sort(() => Math.random() - 0.5);\n    setSelectedOption(null);\n    setShuffledOptions(shuffledOptions);\n  };\n\n  const [shuffledOptions, setShuffledOptions] = useState(\n    [] as { text: string; isCorrect: boolean }[]\n  );\n\n  const handleOptionClick = (index: number, isCorrect: boolean) => {\n    setSelectedOption(index);\n    if (isCorrect) {\n      // Действия при выборе правильного ответа\n    } else {\n      // Действия при выборе неправильного ответа\n    }\n  };\n\n  const handleAnswerSelect = () => {\n    setAnswerSelected(true);\n  };\n\n  // Константы для классов кнопок\n  const correctClass = \"bg-green-600 dark:bg-purple-600 hover:bg-green-700 dark:hover:bg-purple-700 text-white\";\n  const incorrectClass = \"bg-red-600 dark:bg-purple-700 hover:bg-red-700 dark:hover:bg-purple-800 text-white\";\n  const defaultClass = \"bg-blue-600 dark:bg-purple-500 hover:bg-blue-700 dark:hover:bg-purple-600 text-white\";\n\n  return (\n    <div\n      className=\"max-w-xl mx-auto bg-white dark:bg-gray-800 shadow-md rounded-lg overflow-hidden mb-4 relative\"\n      style={{ height: \"400px\", overflowY: \"scroll\" }}\n    >\n      <div className=\"bg-gray-200 dark:bg-gray-900 text-gray-700 dark:text-gray-300 text-lg font-semibold px-6 py-4\">\n        {category}\n      </div>\n      <div className=\"p-6\">\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n          Question {questionNumber} out of {questionsAmount}\n        </p>\n        <p className=\"text-xl text-gray-800 dark:text-gray-200 mb-4\">{questionText}</p>\n        <div className=\"grid grid-cols-1 gap-4\">\n          {shuffledOptions.map((option, index) => (\n            <button\n              key={index}\n              onClick={() => handleOptionClick(index, option.isCorrect)}\n              className={`py-2 px-4 rounded focus:outline-none focus:shadow-outline block w-full text-left ${\n                selectedOption === index\n                  ? option.isCorrect\n                    ? correctClass\n                    : incorrectClass\n                  : defaultClass\n              }`}\n              disabled={answerSelected}\n            >\n              {option.text}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-600 to-blue-500 opacity-50 pointer-events-none rounded-lg\"></div>\n    </div>\n  );\n};\n\nexport default QuizCard;\n"],"mappings":";;;AAAA,MAAMA,QAAyB,GAAGA,CAAC;EACjCC,QAAQ;EACRC,cAAc;EACdC,eAAe;EACfC,YAAY;EACZC;AACK,CAAC,KAAK;EAAAC,EAAA;EACX,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAE3DG,SAAS,CAAC,MAAM;IACdC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACX,cAAc,CAAC,CAAC;EAEpB,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,eAAe,GAAG,CAAC,GAAGT,OAAO,CAAC,CAACU,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACpET,iBAAiB,CAAC,IAAI,CAAC;IACvBU,kBAAkB,CAACJ,eAAe,CAAC;EACrC,CAAC;EAED,MAAM,CAACA,eAAe,EAAEI,kBAAkB,CAAC,GAAGT,QAAQ,CACpD,EACF,CAAC;EAED,MAAMU,iBAAiB,GAAGA,CAACC,KAAa,EAAEC,SAAkB,KAAK;IAC/Db,iBAAiB,CAACY,KAAK,CAAC;IACxB,IAAIC,SAAS,EAAE;MACb;IAAA,CACD,MAAM;MACL;IAAA;EAEJ,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BX,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMY,YAAY,GAAG,wFAAwF;EAC7G,MAAMC,cAAc,GAAG,oFAAoF;EAC3G,MAAMC,YAAY,GAAG,sFAAsF;EAE3G,oBACEC,OAAA;IACEC,SAAS,EAAC,+FAA+F;IACzGC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAEhDL,OAAA;MAAKC,SAAS,EAAC,+FAA+F;MAAAI,QAAA,EAC3G9B;IAAQ;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNT,OAAA;MAAKC,SAAS,EAAC,KAAK;MAAAI,QAAA,gBAClBL,OAAA;QAAGC,SAAS,EAAC,+CAA+C;QAAAI,QAAA,GAAC,WAClD,EAAC7B,cAAc,EAAC,UAAQ,EAACC,eAAe;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACJT,OAAA;QAAGC,SAAS,EAAC,+CAA+C;QAAAI,QAAA,EAAE3B;MAAY;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/ET,OAAA;QAAKC,SAAS,EAAC,wBAAwB;QAAAI,QAAA,EACpCjB,eAAe,CAACsB,GAAG,CAAC,CAACC,MAAM,EAAEjB,KAAK,kBACjCM,OAAA;UAEEY,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAACC,KAAK,EAAEiB,MAAM,CAAChB,SAAS,CAAE;UAC1DM,SAAS,EAAG,oFACVpB,cAAc,KAAKa,KAAK,GACpBiB,MAAM,CAAChB,SAAS,GACdE,YAAY,GACZC,cAAc,GAChBC,YACL,EAAE;UACHc,QAAQ,EAAE7B,cAAe;UAAAqB,QAAA,EAExBM,MAAM,CAACG;QAAI,GAXPpB,KAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNT,OAAA;MAAKC,SAAS,EAAC;IAA0G;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7H,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA7EIN,QAAyB;AAAAyC,EAAA,GAAzBzC,QAAyB;AA+E/B,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}