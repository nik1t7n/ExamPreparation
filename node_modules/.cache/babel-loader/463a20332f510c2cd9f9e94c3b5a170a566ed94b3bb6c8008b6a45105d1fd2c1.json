{"ast":null,"code":"import React,{useState}from'react';import{questions}from'../../data/questions';import SuccessMessage from'../../components/SuccessMessage';import QuizCard from'../../components/QuizCard';import CustomButton from'../../components/CustomButton';import ThemeToggler from'../../components/ThemeToggler';// Импортируем компонент ThemeToggler\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizPage=props=>{const[currentQuestion,setCurrentQuestion]=useState(0);const[showSuccessMessage,setShowSuccessMessage]=useState(false);const handleNextQuestion=()=>{if(currentQuestion<questions.length-1){setCurrentQuestion(prevQuestion=>prevQuestion+1);}else{setShowSuccessMessage(true);}};const handleResetQuiz=()=>{setCurrentQuestion(0);setShowSuccessMessage(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-800 min-h-screen flex justify-center items-center flex-col px-4 relative\",children:[\" \",/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 right-0 m-4\",children:/*#__PURE__*/_jsx(ThemeToggler,{})}),showSuccessMessage?/*#__PURE__*/_jsx(SuccessMessage,{onReset:handleResetQuiz}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-8 relative w-full max-w-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsx(QuizCard,{...questions[currentQuestion],questionsAmount:questions.length})})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center w-full\",children:/*#__PURE__*/_jsx(CustomButton,{text:\"Next Question\",onClick:handleNextQuestion})})]})]});};export default QuizPage;","map":{"version":3,"names":["React","useState","questions","SuccessMessage","QuizCard","CustomButton","ThemeToggler","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","QuizPage","props","currentQuestion","setCurrentQuestion","showSuccessMessage","setShowSuccessMessage","handleNextQuestion","length","prevQuestion","handleResetQuiz","className","children","onReset","questionsAmount","text","onClick"],"sources":["/Users/nik1t7n/Desktop/again/my-tailwind-app/src/pages/QuizPage/QuizPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { questions } from '../../data/questions';\nimport SuccessMessage from '../../components/SuccessMessage';\nimport QuizCard from '../../components/QuizCard';\nimport CustomButton from '../../components/CustomButton';\nimport Navbar from '../../components/Navbar';\nimport ThemeToggler from '../../components/ThemeToggler'; // Импортируем компонент ThemeToggler\n\ntype Props = {};\n\nconst QuizPage = (props: Props) => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion((prevQuestion: number) => prevQuestion + 1);\n    } else {\n      setShowSuccessMessage(true);\n    }\n  };\n\n  const handleResetQuiz = () => {\n    setCurrentQuestion(0);\n    setShowSuccessMessage(false);\n  };\n\n  return (\n    <div className=\"bg-gray-100 dark:bg-gray-800 min-h-screen flex justify-center items-center flex-col px-4 relative\"> {/* Добавляем relative здесь */}\n      <div className=\"absolute top-0 right-0 m-4\"><ThemeToggler/></div>\n      {showSuccessMessage ? (\n        <SuccessMessage onReset={handleResetQuiz} />\n      ) : (\n        <>\n          <div className=\"mb-8 relative w-full max-w-lg\">\n            <div className=\"\">\n              <QuizCard {...questions[currentQuestion]} questionsAmount={questions.length} />\n            </div>\n          </div>\n          <div className=\"flex justify-center w-full\">\n            <CustomButton text=\"Next Question\" onClick={handleNextQuestion} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,KAAQ,sBAAsB,CAChD,MAAO,CAAAC,cAAc,KAAM,iCAAiC,CAC5D,MAAO,CAAAC,QAAQ,KAAM,2BAA2B,CAChD,MAAO,CAAAC,YAAY,KAAM,+BAA+B,CAExD,MAAO,CAAAC,YAAY,KAAM,+BAA+B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAI1D,KAAM,CAAAC,QAAQ,CAAIC,KAAY,EAAK,CACjC,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CACzD,KAAM,CAACgB,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAEnE,KAAM,CAAAkB,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAIJ,eAAe,CAAGb,SAAS,CAACkB,MAAM,CAAG,CAAC,CAAE,CAC1CJ,kBAAkB,CAAEK,YAAoB,EAAKA,YAAY,CAAG,CAAC,CAAC,CAChE,CAAC,IAAM,CACLH,qBAAqB,CAAC,IAAI,CAAC,CAC7B,CACF,CAAC,CAED,KAAM,CAAAI,eAAe,CAAGA,CAAA,GAAM,CAC5BN,kBAAkB,CAAC,CAAC,CAAC,CACrBE,qBAAqB,CAAC,KAAK,CAAC,CAC9B,CAAC,CAED,mBACEN,KAAA,QAAKW,SAAS,CAAC,mGAAmG,CAAAC,QAAA,EAAC,GAAC,cAClHhB,IAAA,QAAKe,SAAS,CAAC,4BAA4B,CAAAC,QAAA,cAAChB,IAAA,CAACF,YAAY,GAAC,CAAC,CAAK,CAAC,CAChEW,kBAAkB,cACjBT,IAAA,CAACL,cAAc,EAACsB,OAAO,CAAEH,eAAgB,CAAE,CAAC,cAE5CV,KAAA,CAAAF,SAAA,EAAAc,QAAA,eACEhB,IAAA,QAAKe,SAAS,CAAC,+BAA+B,CAAAC,QAAA,cAC5ChB,IAAA,QAAKe,SAAS,CAAC,EAAE,CAAAC,QAAA,cACfhB,IAAA,CAACJ,QAAQ,KAAKF,SAAS,CAACa,eAAe,CAAC,CAAEW,eAAe,CAAExB,SAAS,CAACkB,MAAO,CAAE,CAAC,CAC5E,CAAC,CACH,CAAC,cACNZ,IAAA,QAAKe,SAAS,CAAC,4BAA4B,CAAAC,QAAA,cACzChB,IAAA,CAACH,YAAY,EAACsB,IAAI,CAAC,eAAe,CAACC,OAAO,CAAET,kBAAmB,CAAE,CAAC,CAC/D,CAAC,EACN,CACH,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}