{"ast":null,"code":"var _jsxFileName = \"/Users/nik1t7n/Desktop/again/my-tailwind-app/src/pages/QuizPage/QuizPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { questions } from '../../data/questions';\nimport SuccessMessage from '../../components/SuccessMessage';\nimport QuizCard from '../../components/QuizCard';\nimport CustomButton from '../../components/CustomButton';\nimport ThemeToggler from '../../components/ThemeToggler'; // Импортируем компонент ThemeToggler\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizPage = props => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n    } else {\n      setShowSuccessMessage(true);\n    }\n  };\n  const handleResetQuiz = () => {\n    setCurrentQuestion(0);\n    setShowSuccessMessage(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex justify-center items-center flex-col px-4 relative\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 right-0 m-4\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(ThemeToggler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showSuccessMessage ? /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      onReset: handleResetQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 relative w-full max-w-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(QuizCard, {\n            ...questions[currentQuestion],\n            questionsAmount: questions.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center w-full\",\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          text: \"Next Question\",\n          onClick: handleNextQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"dGEIJQF+CxmJqmsz8CkIjTbZcd4=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","questions","SuccessMessage","QuizCard","CustomButton","ThemeToggler","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizPage","props","_s","currentQuestion","setCurrentQuestion","showSuccessMessage","setShowSuccessMessage","handleNextQuestion","length","prevQuestion","handleResetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onReset","questionsAmount","text","onClick","_c","$RefreshReg$"],"sources":["/Users/nik1t7n/Desktop/again/my-tailwind-app/src/pages/QuizPage/QuizPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { questions } from '../../data/questions';\nimport SuccessMessage from '../../components/SuccessMessage';\nimport QuizCard from '../../components/QuizCard';\nimport CustomButton from '../../components/CustomButton';\nimport Navbar from '../../components/Navbar';\nimport ThemeToggler from '../../components/ThemeToggler'; // Импортируем компонент ThemeToggler\n\ntype Props = {};\n\nconst QuizPage = (props: Props) => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion((prevQuestion: number) => prevQuestion + 1);\n    } else {\n      setShowSuccessMessage(true);\n    }\n  };\n\n  const handleResetQuiz = () => {\n    setCurrentQuestion(0);\n    setShowSuccessMessage(false);\n  };\n\n  return (\n    <div className=\"min-h-screen flex justify-center items-center flex-col px-4 relative\"> {/* Добавляем relative здесь */}\n      <div className=\"absolute top-0 right-0 m-4\"> {/* Обертываем ThemeToggler в div и применяем классы к нему */}\n        <ThemeToggler />\n      </div>\n      {showSuccessMessage ? (\n        <SuccessMessage onReset={handleResetQuiz} />\n      ) : (\n        <>\n          <div className=\"mb-8 relative w-full max-w-lg\">\n            <div className=\"\">\n              <QuizCard {...questions[currentQuestion]} questionsAmount={questions.length} />\n            </div>\n          </div>\n          <div className=\"flex justify-center w-full\">\n            <CustomButton text=\"Next Question\" onClick={handleNextQuestion} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,YAAY,MAAM,+BAA+B;AAExD,OAAOC,YAAY,MAAM,+BAA+B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAI1D,MAAMC,QAAQ,GAAIC,KAAY,IAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIJ,eAAe,GAAGZ,SAAS,CAACiB,MAAM,GAAG,CAAC,EAAE;MAC1CJ,kBAAkB,CAAEK,YAAoB,IAAKA,YAAY,GAAG,CAAC,CAAC;IAChE,CAAC,MAAM;MACLH,qBAAqB,CAAC,IAAI,CAAC;IAC7B;EACF,CAAC;EAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5BN,kBAAkB,CAAC,CAAC,CAAC;IACrBE,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACET,OAAA;IAAKc,SAAS,EAAC,sEAAsE;IAAAC,QAAA,GAAC,GAAC,eACrFf,OAAA;MAAKc,SAAS,EAAC,4BAA4B;MAAAC,QAAA,GAAC,GAAC,eAC3Cf,OAAA,CAACF,YAAY;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EACLX,kBAAkB,gBACjBR,OAAA,CAACL,cAAc;MAACyB,OAAO,EAAEP;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE5CnB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAKc,SAAS,EAAC,+BAA+B;QAAAC,QAAA,eAC5Cf,OAAA;UAAKc,SAAS,EAAC,EAAE;UAAAC,QAAA,eACff,OAAA,CAACJ,QAAQ;YAAA,GAAKF,SAAS,CAACY,eAAe,CAAC;YAAEe,eAAe,EAAE3B,SAAS,CAACiB;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNnB,OAAA;QAAKc,SAAS,EAAC,4BAA4B;QAAAC,QAAA,eACzCf,OAAA,CAACH,YAAY;UAACyB,IAAI,EAAC,eAAe;UAACC,OAAO,EAAEb;QAAmB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCIF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}